openapi: 3.0.3
info:
  title: Go Hexagonal Fullstack Monorepo API
  description: API specification for the Go hexagonal architecture monorepo
  version: 1.0.0
  contact:
    name: Tech Forge LAT
    url: https://github.com/techforge-lat/go-hexagonal-fullstack-monorepo
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server

paths:
  # No API endpoints defined yet - ready for new modules

components:
  schemas:
    ApiResponse:
      type: object
      description: Standard API response following RFC 9457 Problem Details
      properties:
        type:
          type: string
          description: Problem type URI
          example: "about:blank"
        title:
          type: string
          description: Problem title
          example: "Recurso Creado"
        detail:
          type: string
          description: Problem detail
          example: "El recurso fue creado exitosamente"
        status:
          type: integer
          description: HTTP status code
          example: 201
        instance:
          type: string
          description: Problem instance URI
          example: "/resource/123"
        data:
          description: Response data (varies by endpoint)

    ErrorResponse:
      type: object
      description: Error response following RFC 9457 Problem Details
      properties:
        type:
          type: string
          description: Problem type URI
          example: "about:blank"
        title:
          type: string
          description: Error title
          example: "Solicitud Incorrecta"
        detail:
          type: string
          description: Error detail
          example: "La solicitud es inválida o está mal formada"
        status:
          type: integer
          description: HTTP status code
          example: 400
        instance:
          type: string
          description: Problem instance URI
          example: "/resource"
        debug_error:
          type: string
          description: Debug error information (development only)
          example: "validation failed: field is required"
        error_code:
          type: string
          description: Application-specific error code
          example: "VALIDATION_FAILED"

  parameters:
    SelectParam:
      name: select
      in: query
      description: |
        Comma-separated list of fields to include in the response.
        Use "*" to select all fields.
      schema:
        type: string
        example: "id,name,status"

    PaginationParam:
      name: x
      in: query
      description: |
        Pagination parameters. Format: page:number or limit:size
        Controls page number and page size for results.
        Multiple x parameters can be provided for different pagination settings.
        
        **Examples**:
        - `x=page:1` - Get page 1
        - `x=limit:10` - 10 items per page
        - Multiple: `x=page:2&x=limit:20` - Page 2 with 20 items
      schema:
        type: array
        items:
          type: string
          enum: 
            - "page:1"
            - "page:2"
            - "limit:10"
            - "limit:20"
            - "limit:50"
        example: ["page:1", "limit:10"]

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            bad_request:
              summary: Invalid request
              value:
                type: "about:blank"
                title: "Solicitud Incorrecta"
                detail: "La solicitud es inválida o está mal formada"
                status: 400

    NotFound:
      description: Resource Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            not_found:
              summary: Resource not found
              value:
                type: "about:blank"
                title: "Recurso No Encontrado"
                detail: "El recurso solicitado no pudo ser encontrado"
                status: 404

    ValidationError:
      description: Validation Failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            validation_error:
              summary: Validation failed
              value:
                type: "about:blank"
                title: "Validación Fallida"
                detail: "Los datos proporcionados no cumplen con los requisitos de validación"
                status: 422
                debug_error: "field: This field is required"

    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            internal_error:
              summary: Server error
              value:
                type: "about:blank"
                title: "Error Interno del Servidor"
                detail: "Ocurrió un error inesperado en el servidor"
                status: 500

tags: []