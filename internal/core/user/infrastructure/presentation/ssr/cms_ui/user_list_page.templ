package cms_ui

import (
	"strconv"
	"go-hexagonal-fullstack-monorepo/internal/core/user/domain/entity"
	"go-hexagonal-fullstack-monorepo/internal/shared/dafi"
)

templ UserListPage(users []*entity.UserResponse, pagination *dafi.Pagination) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>User Management - CMS</title>
			<script src="https://cdn.tailwindcss.com"></script>
		</head>
		<body class="bg-gray-100 min-h-screen">
			<div class="container mx-auto px-4 py-8">
				<div class="bg-white rounded-lg shadow-md p-6">
					<div class="flex justify-between items-center mb-6">
						<h1 class="text-2xl font-bold text-gray-800">User Management</h1>
						<button class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors">
							Add New User
						</button>
					</div>
					
					<div class="overflow-x-auto">
						<table class="min-w-full bg-white border border-gray-200">
							<thead class="bg-gray-50">
								<tr>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										ID
									</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Name
									</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Email
									</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Created At
									</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
										Actions
									</th>
								</tr>
							</thead>
							<tbody class="bg-white divide-y divide-gray-200">
								for _, user := range users {
									<tr class="hover:bg-gray-50">
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
											{ user.ID.String()[:8] }...
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<div class="text-sm font-medium text-gray-900">{ user.Name }</div>
										</td>
										<td class="px-6 py-4 whitespace-nowrap">
											<div class="text-sm text-gray-900">{ user.Email }</div>
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
											{ user.CreatedAt }
										</td>
										<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
											<button class="text-blue-600 hover:text-blue-900 mr-3">Edit</button>
											<button class="text-red-600 hover:text-red-900">Delete</button>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
					
					if pagination != nil {
						<div class="mt-6 flex items-center justify-between">
							<div class="text-sm text-gray-700">
								Showing page { strconv.FormatInt(pagination.Page, 10) } of { strconv.FormatInt(pagination.TotalPages(), 10) }
							</div>
							<div class="flex space-x-2">
								if pagination.Page > 1 {
									<button class="px-3 py-2 bg-gray-200 text-gray-600 rounded hover:bg-gray-300 transition-colors">
										Previous
									</button>
								}
								if pagination.Page < pagination.TotalPages() {
									<button class="px-3 py-2 bg-gray-200 text-gray-600 rounded hover:bg-gray-300 transition-colors">
										Next
									</button>
								}
							</div>
						</div>
					}
				</div>
			</div>
		</body>
	</html>
}